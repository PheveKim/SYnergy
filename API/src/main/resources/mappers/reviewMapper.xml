<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- name space는 UserRepo의 fully qualified name으로 설정한다. -->
<mapper namespace="synergy.model.dao.ReviewDao">

	<!-- 사용자 정보를 저장한다. id는 repo클래스의 메소드 이름과 일치시킨다. -->
	<insert id="insert" parameterType="Review">
		INSERT INTO reviews
		VALUES(#{id}, #{userid}, #{videoid}, #{title}, #{content})
	</insert>
	
	<delete id="delete" parameterType="string">
		DELETE FROM reviews
		WHERE id = #{id}
	</delete>
	
	<update id="update" parameterType="Review">
		UPDATE reviews
		SET userid = #{userid}, videoid = #{videoid}, title = #{title}, content = #{content}
		WHERE id = #{id}
	</update>
	
	<!-- 사용자를 id로 검색하여 조회한다. id는 repo클래스의 메소드 이름과 일치시킨다. -->
	<select id="searchById" parameterType="string"
		resultType="Review">
		SELECT *
		FROM reviews WHERE id = #{id}
	</select>

	<!-- 사용자 이름으로 검색하여 조회한다. id는 repo클래스의 메소드 이름과 일치시킨다. -->
	<select id="searchByTitle" parameterType="string"
		resultType="Review">
		SELECT *
		FROM reviews WHERE title LIKE
		CONCAT('%',#{title},'%')
	</select>

	<!-- 모든 사용자 정보를 검색한다. id는 repo클래스의 메소드 이름과 일치시킨다. -->
	<select id="selectAll" resultType="Review">
		SELECT * FROM reviews
	</select>
	
	<select id="searchByCondition" parameterType="SearchCondition" resultType="Review">
		SELECT * FROM reviews
		<if test="key!='none'">
			WHERE ${key} LIKE CONCAT('%' #{word} '%')
		</if>
		<if test="orderBy!='none'">
			ORDER BY ${orderBy} ${orderByDir}
		</if>
	</select>

	
</mapper>